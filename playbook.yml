- name: Configurar instancia EC2
  hosts: localhost
  become: true
  tasks:
    - name: Actualizar sistema
      yum:
        name: "*"
        state: latest

    - name: Instalar Git
      yum:
        name: git
        state: present
        
    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python-pip
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - amazon-linux-extras

    - name: Add extras repository
      shell: yum-config-manager --enable extras

    - name: Enable Some packages from amazon-linux-extras packages
      shell: "amazon-linux-extras enable python3.8 ansible2 docker"

    - name: clean yum metadata cache
      command: yum clean metadata
      args:
        warn: false

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python3.8
        - ansible
        - docker

    - name: Enable Docker CE service at startup
      service:
        name: docker
        state: started
        enabled: yes

    - name: Upgrade pip3
      shell: "python3.8 -m pip install pip --upgrade"

    - name: Ensure Python pip packages are installed
      pip:
        name: "{{ packages }}"
        executable: /usr/local/bin/pip3.8
      vars:
        packages:
        - boto
        - boto3

    - name: Create directory for Docker CLI plugins
      file:
        path: /usr/local/lib/docker/cli-plugins
        state: directory
        mode: '0755'
        
    - name: Download Docker Compose V2 binary
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.18.0/docker-compose-linux-x86_64
        dest: /usr/local/lib/docker/cli-plugins/docker-compose
        mode: '0755'
        
    - name: Make Docker Compose binary executable
      file:
        path: /usr/local/lib/docker/cli-plugins/docker-compose
        mode: '0755'
        
    - name: Verify Docker Compose installation
      command: docker compose version
      register: docker_compose_version
      ignore_errors: yes
      
    - name: Show Docker Compose version
      debug:
        msg: "{{ docker_compose_version.stdout }}"
      when: docker_compose_version.rc == 0

    - name: Add user to docker group
      user:
        name: "{{ normal_user }}"
        groups: docker
        append: yes
      vars:
        normal_user: "ec2-user"
